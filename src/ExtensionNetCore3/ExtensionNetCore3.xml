<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ExtensionNetCore3</name>
    </assembly>
    <members>
        <member name="T:ExtensionNetCore3.CLIAPIHostedService">
            <summary>
            The service that starts execution of the CLI
            </summary>
            <seealso cref="T:Microsoft.Extensions.Hosting.IHostedService" />
        </member>
        <member name="F:ExtensionNetCore3.CLIAPIHostedService.app">
            <summary>The application builder.
            It is passed when UseCLI
            </summary>
        </member>
        <member name="M:ExtensionNetCore3.CLIAPIHostedService.#ctor(Microsoft.AspNetCore.Mvc.ApiExplorer.IApiDescriptionGroupCollectionProvider,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtensionNetCore3.CLIAPIHostedService"/> class.
            </summary>
            <param name="api">The API for find the WebAPI</param>
            <param name="configuration">The configuration to find CLI commands</param>
        </member>
        <member name="M:ExtensionNetCore3.CLIAPIHostedService.IsEnabled">
            <summary>
            Determines whether this instance is enabled.
            </summary>
            <returns>
              <c>true</c> if this instance is enabled; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ExtensionNetCore3.CLIAPIHostedService.StartAsync(System.Threading.CancellationToken)">
            <summary>
            Triggered when the application host is ready to start the service.
            It works after server addresses is available
            </summary>
            <param name="cancellationToken">Indicates that the start process has been aborted.</param>
            <returns></returns>
        </member>
        <member name="M:ExtensionNetCore3.CLIAPIHostedService.ShouldStay">
            <summary>
            Default: false
            If true , executes and then not exits.
            If false , executes and then exits.
            </summary>
            <returns>CLI_STAY ==1</returns>
        </member>
        <member name="M:ExtensionNetCore3.CLIAPIHostedService.ExistsApp">
            <summary>
            Waits to see if the app exists. 
            It is passed later in the lifecycle
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtensionNetCore3.CLIAPIHostedService.StopAsync(System.Threading.CancellationToken)">
            <summary>
            Triggered when the application host is performing a graceful shutdown.
            </summary>
            <param name="cancellationToken">Indicates that the shutdown process should no longer be graceful.</param>
            <returns></returns>
        </member>
        <member name="T:ExtensionNetCore3.CLIExtension">
            <summary>
            helper extension class
            </summary>
        </member>
        <member name="M:ExtensionNetCore3.CLIExtension.AddCLI(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Helper method to be used at 
             public void ConfigureServices
            </summary>
            <param name="serviceCollection"></param>
            <returns></returns>
        </member>
        <member name="M:ExtensionNetCore3.CLIExtension.UseCLI(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Helper method to be used at
            public void Configure
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
    </members>
</doc>
