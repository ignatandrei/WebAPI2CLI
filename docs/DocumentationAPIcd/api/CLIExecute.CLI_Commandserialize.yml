### YamlMime:ManagedReference
items:
- uid: CLIExecute.CLI_Commandserialize
  commentId: T:CLIExecute.CLI_Commandserialize
  id: CLI_Commandserialize
  parent: CLIExecute
  children:
  - CLIExecute.CLI_Commandserialize.DeSerialize(System.String)
  - CLIExecute.CLI_Commandserialize.Serialize(System.Object)
  langs:
  - csharp
  - vb
  name: CLI_Commandserialize
  nameWithType: CLI_Commandserialize
  fullName: CLIExecute.CLI_Commandserialize
  type: Class
  source:
    remote:
      path: src/CLIExecute/CLICommandSerialize.cs
      branch: master
      repo: https://github.com/ignatandrei/WebAPI2CLI.git
    id: CLI_Commandserialize
    path: ../../../src/CLIExecute/CLICommandSerialize.cs
    startLine: 11
  assemblies:
  - CLIExecute
  namespace: CLIExecute
  summary: "\nserialize commands\n"
  example: []
  syntax:
    content: 'public class CLI_Commandserialize : object'
    content.vb: >-
      Public Class CLI_Commandserialize

          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CLIExecute.CLI_Commandserialize.Serialize(System.Object)
  commentId: M:CLIExecute.CLI_Commandserialize.Serialize(System.Object)
  id: Serialize(System.Object)
  parent: CLIExecute.CLI_Commandserialize
  langs:
  - csharp
  - vb
  name: Serialize(Object)
  nameWithType: CLI_Commandserialize.Serialize(Object)
  fullName: CLIExecute.CLI_Commandserialize.Serialize(System.Object)
  type: Method
  source:
    remote:
      path: src/CLIExecute/CLICommandSerialize.cs
      branch: master
      repo: https://github.com/ignatandrei/WebAPI2CLI.git
    id: Serialize
    path: ../../../src/CLIExecute/CLICommandSerialize.cs
    startLine: 30
  assemblies:
  - CLIExecute
  namespace: CLIExecute
  summary: "\nSerializes the specified object in YAML\n"
  example: []
  syntax:
    content: public static string Serialize(object o)
    parameters:
    - id: o
      type: System.Object
      description: The o.
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function Serialize(o As Object) As String
  overload: CLIExecute.CLI_Commandserialize.Serialize*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CLIExecute.CLI_Commandserialize.DeSerialize(System.String)
  commentId: M:CLIExecute.CLI_Commandserialize.DeSerialize(System.String)
  id: DeSerialize(System.String)
  parent: CLIExecute.CLI_Commandserialize
  langs:
  - csharp
  - vb
  name: DeSerialize(String)
  nameWithType: CLI_Commandserialize.DeSerialize(String)
  fullName: CLIExecute.CLI_Commandserialize.DeSerialize(System.String)
  type: Method
  source:
    remote:
      path: src/CLIExecute/CLICommandSerialize.cs
      branch: master
      repo: https://github.com/ignatandrei/WebAPI2CLI.git
    id: DeSerialize
    path: ../../../src/CLIExecute/CLICommandSerialize.cs
    startLine: 40
  assemblies:
  - CLIExecute
  namespace: CLIExecute
  summary: "\nfrom YAML to CLI_Commands\n"
  example: []
  syntax:
    content: public static CLI_Commands DeSerialize(string text)
    parameters:
    - id: text
      type: System.String
      description: The text.
    return:
      type: CLIExecute.CLI_Commands
      description: CLI_Commands
    content.vb: Public Shared Function DeSerialize(text As String) As CLI_Commands
  overload: CLIExecute.CLI_Commandserialize.DeSerialize*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: CLIExecute
  commentId: N:CLIExecute
  name: CLIExecute
  nameWithType: CLIExecute
  fullName: CLIExecute
- uid: System.Object
  commentId: '!:System.Object'
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: CLIExecute.CLI_Commandserialize.Serialize*
  commentId: Overload:CLIExecute.CLI_Commandserialize.Serialize
  name: Serialize
  nameWithType: CLI_Commandserialize.Serialize
  fullName: CLIExecute.CLI_Commandserialize.Serialize
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CLIExecute.CLI_Commandserialize.DeSerialize*
  commentId: Overload:CLIExecute.CLI_Commandserialize.DeSerialize
  name: DeSerialize
  nameWithType: CLI_Commandserialize.DeSerialize
  fullName: CLIExecute.CLI_Commandserialize.DeSerialize
- uid: CLIExecute.CLI_Commands
  commentId: T:CLIExecute.CLI_Commands
  parent: CLIExecute
  name: CLI_Commands
  nameWithType: CLI_Commands
  fullName: CLIExecute.CLI_Commands
