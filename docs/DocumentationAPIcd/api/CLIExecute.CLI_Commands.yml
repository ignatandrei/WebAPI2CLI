### YamlMime:ManagedReference
items:
- uid: CLIExecute.CLI_Commands
  commentId: T:CLIExecute.CLI_Commands
  id: CLI_Commands
  parent: CLIExecute
  children:
  - CLIExecute.CLI_Commands.AddCommand(CLIExecute.ICLICommand)
  - CLIExecute.CLI_Commands.FindCommands(System.String)
  - CLIExecute.CLI_Commands.V1
  langs:
  - csharp
  - vb
  name: CLI_Commands
  nameWithType: CLI_Commands
  fullName: CLIExecute.CLI_Commands
  type: Class
  source:
    remote:
      path: src/CLIExecute/CLICommands.cs
      branch: master
      repo: https://github.com/ignatandrei/WebAPI2CLI.git
    id: CLI_Commands
    path: ../../../src/CLIExecute/CLICommands.cs
    startLine: 11
  assemblies:
  - CLIExecute
  namespace: CLIExecute
  summary: "\nContains commands to be executed.\nNow just V1\n"
  example: []
  syntax:
    content: 'public class CLI_Commands : object'
    content.vb: >-
      Public Class CLI_Commands

          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CLIExecute.CLI_Commands.V1
  commentId: P:CLIExecute.CLI_Commands.V1
  id: V1
  parent: CLIExecute.CLI_Commands
  langs:
  - csharp
  - vb
  name: V1
  nameWithType: CLI_Commands.V1
  fullName: CLIExecute.CLI_Commands.V1
  type: Property
  source:
    remote:
      path: src/CLIExecute/CLICommands.cs
      branch: master
      repo: https://github.com/ignatandrei/WebAPI2CLI.git
    id: V1
    path: ../../../src/CLIExecute/CLICommands.cs
    startLine: 22
  assemblies:
  - CLIExecute
  namespace: CLIExecute
  summary: "\nGets or sets the v1 version of commands.\n"
  example: []
  syntax:
    content: public CLICommand_v1[] V1 { get; set; }
    parameters: []
    return:
      type: CLIExecute.CLICommand_v1[]
      description: "\nThe v1 version of commands\n"
    content.vb: Public Property V1 As CLICommand_v1()
  overload: CLIExecute.CLI_Commands.V1*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CLIExecute.CLI_Commands.FindCommands(System.String)
  commentId: M:CLIExecute.CLI_Commands.FindCommands(System.String)
  id: FindCommands(System.String)
  parent: CLIExecute.CLI_Commands
  langs:
  - csharp
  - vb
  name: FindCommands(String)
  nameWithType: CLI_Commands.FindCommands(String)
  fullName: CLIExecute.CLI_Commands.FindCommands(System.String)
  type: Method
  source:
    remote:
      path: src/CLIExecute/CLICommands.cs
      branch: master
      repo: https://github.com/ignatandrei/WebAPI2CLI.git
    id: FindCommands
    path: ../../../src/CLIExecute/CLICommands.cs
    startLine: 39
  assemblies:
  - CLIExecute
  namespace: CLIExecute
  summary: "\nFinds the commands with name\n"
  example: []
  syntax:
    content: public ICLICommand[] FindCommands(string name)
    parameters:
    - id: name
      type: System.String
      description: The name.
    return:
      type: CLIExecute.ICLICommand[]
      description: ''
    content.vb: Public Function FindCommands(name As String) As ICLICommand()
  overload: CLIExecute.CLI_Commands.FindCommands*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CLIExecute.CLI_Commands.AddCommand(CLIExecute.ICLICommand)
  commentId: M:CLIExecute.CLI_Commands.AddCommand(CLIExecute.ICLICommand)
  id: AddCommand(CLIExecute.ICLICommand)
  parent: CLIExecute.CLI_Commands
  langs:
  - csharp
  - vb
  name: AddCommand(ICLICommand)
  nameWithType: CLI_Commands.AddCommand(ICLICommand)
  fullName: CLIExecute.CLI_Commands.AddCommand(CLIExecute.ICLICommand)
  type: Method
  source:
    remote:
      path: src/CLIExecute/CLICommands.cs
      branch: master
      repo: https://github.com/ignatandrei/WebAPI2CLI.git
    id: AddCommand
    path: ../../../src/CLIExecute/CLICommands.cs
    startLine: 68
  assemblies:
  - CLIExecute
  namespace: CLIExecute
  summary: "\nAdds the command to the list of the commands\n"
  example: []
  syntax:
    content: public CLI_Commands AddCommand(ICLICommand cmd)
    parameters:
    - id: cmd
      type: CLIExecute.ICLICommand
      description: The command.
    return:
      type: CLIExecute.CLI_Commands
      description: ''
    content.vb: Public Function AddCommand(cmd As ICLICommand) As CLI_Commands
  overload: CLIExecute.CLI_Commands.AddCommand*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: CLIExecute
  commentId: N:CLIExecute
  name: CLIExecute
  nameWithType: CLIExecute
  fullName: CLIExecute
- uid: System.Object
  commentId: '!:System.Object'
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: CLIExecute.CLI_Commands.V1*
  commentId: Overload:CLIExecute.CLI_Commands.V1
  name: V1
  nameWithType: CLI_Commands.V1
  fullName: CLIExecute.CLI_Commands.V1
- uid: CLIExecute.CLICommand_v1[]
  isExternal: true
  name: CLICommand_v1[]
  nameWithType: CLICommand_v1[]
  fullName: CLIExecute.CLICommand_v1[]
  nameWithType.vb: CLICommand_v1()
  fullName.vb: CLIExecute.CLICommand_v1()
  name.vb: CLICommand_v1()
  spec.csharp:
  - uid: CLIExecute.CLICommand_v1
    name: CLICommand_v1
    nameWithType: CLICommand_v1
    fullName: CLIExecute.CLICommand_v1
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: CLIExecute.CLICommand_v1
    name: CLICommand_v1
    nameWithType: CLICommand_v1
    fullName: CLIExecute.CLICommand_v1
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: CLIExecute.CLI_Commands.FindCommands*
  commentId: Overload:CLIExecute.CLI_Commands.FindCommands
  name: FindCommands
  nameWithType: CLI_Commands.FindCommands
  fullName: CLIExecute.CLI_Commands.FindCommands
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CLIExecute.ICLICommand[]
  isExternal: true
  name: ICLICommand[]
  nameWithType: ICLICommand[]
  fullName: CLIExecute.ICLICommand[]
  nameWithType.vb: ICLICommand()
  fullName.vb: CLIExecute.ICLICommand()
  name.vb: ICLICommand()
  spec.csharp:
  - uid: CLIExecute.ICLICommand
    name: ICLICommand
    nameWithType: ICLICommand
    fullName: CLIExecute.ICLICommand
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: CLIExecute.ICLICommand
    name: ICLICommand
    nameWithType: ICLICommand
    fullName: CLIExecute.ICLICommand
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: CLIExecute.CLI_Commands.AddCommand*
  commentId: Overload:CLIExecute.CLI_Commands.AddCommand
  name: AddCommand
  nameWithType: CLI_Commands.AddCommand
  fullName: CLIExecute.CLI_Commands.AddCommand
- uid: CLIExecute.ICLICommand
  commentId: T:CLIExecute.ICLICommand
  parent: CLIExecute
  name: ICLICommand
  nameWithType: ICLICommand
  fullName: CLIExecute.ICLICommand
- uid: CLIExecute.CLI_Commands
  commentId: T:CLIExecute.CLI_Commands
  parent: CLIExecute
  name: CLI_Commands
  nameWithType: CLI_Commands
  fullName: CLIExecute.CLI_Commands
